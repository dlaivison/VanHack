<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0615.1128                               -->
<workbook original-version='18.1' source-build='2018.1.2 (20181.18.0615.1128)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='saopaulo.osm' inline='true' name='federated.1sfm0np0hk2l83190rrx90ttxwfj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='saopaulo.osm' name='semistructpassivestore-direct.1ocf7ax1js3f2y1ejzssf0rdbuwv'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/dlaivison/Documents/Data Science/VanHack' filename='saopaulo.osm.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[saopaulo.osm.json]'>
                  <map key='address' value='true' />
                  <map key='contact' value='true' />
                  <map key='created' value='true' />
                  <map key='pos' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
                <semistruct-schema-sequel table='[saopaulo.osm.json]'>
                  <semistruct-schema-node global-name='contact.flickr'>
                    <name>flickr</name>
                    <parent-name>contact</parent-name>
                    <type>string</type>
                    <is-selected>true</is-selected>
                    <is-newly-discovered>true</is-newly-discovered>
                    <sample-data>https://flickr.com/sescsp</sample-data>
                  </semistruct-schema-node>
                  <semistruct-schema-node global-name='contact.mobile'>
                    <name>mobile</name>
                    <parent-name>contact</parent-name>
                    <type>string</type>
                    <is-selected>true</is-selected>
                    <is-newly-discovered>true</is-newly-discovered>
                    <sample-data>11 9 5784-3441; 11 9 8485-3121</sample-data>
                  </semistruct-schema-node>
                </semistruct-schema-sequel>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1ocf7ax1js3f2y1ejzssf0rdbuwv' name='saopaulo.osm.json' table='[saopaulo.osm.json]' type='table' />
        <cols>
          <map key='[Business]' value='[saopaulo.osm.json].[Business]' />
          <map key='[Name]' value='[saopaulo.osm.json].[Name]' />
          <map key='[changeset]' value='[saopaulo.osm.json].[created.changeset]' />
          <map key='[city]' value='[saopaulo.osm.json].[address.city]' />
          <map key='[country]' value='[saopaulo.osm.json].[address.country]' />
          <map key='[email]' value='[saopaulo.osm.json].[contact.email]' />
          <map key='[facebook]' value='[saopaulo.osm.json].[contact.facebook]' />
          <map key='[fax]' value='[saopaulo.osm.json].[contact.fax]' />
          <map key='[floor]' value='[saopaulo.osm.json].[address.floor]' />
          <map key='[google_plus]' value='[saopaulo.osm.json].[contact.google_plus]' />
          <map key='[housename]' value='[saopaulo.osm.json].[address.housename]' />
          <map key='[housenumber]' value='[saopaulo.osm.json].[address.housenumber]' />
          <map key='[id]' value='[saopaulo.osm.json].[id]' />
          <map key='[instagram]' value='[saopaulo.osm.json].[contact.instagram]' />
          <map key='[linkedin]' value='[saopaulo.osm.json].[contact.linkedin]' />
          <map key='[phone]' value='[saopaulo.osm.json].[contact.phone]' />
          <map key='[pos Índice (gerado)]' value='[saopaulo.osm.json].[pos.Índice (gerado)]' />
          <map key='[pos]' value='[saopaulo.osm.json].[pos.Valor]' />
          <map key='[postcode]' value='[saopaulo.osm.json].[address.postcode]' />
          <map key='[soundcloud]' value='[saopaulo.osm.json].[contact.soundcloud]' />
          <map key='[state]' value='[saopaulo.osm.json].[address.state]' />
          <map key='[street]' value='[saopaulo.osm.json].[address.street]' />
          <map key='[suburb]' value='[saopaulo.osm.json].[address.suburb]' />
          <map key='[timestamp]' value='[saopaulo.osm.json].[created.timestamp]' />
          <map key='[twitter]' value='[saopaulo.osm.json].[contact.twitter]' />
          <map key='[type]' value='[saopaulo.osm.json].[type]' />
          <map key='[uid]' value='[saopaulo.osm.json].[created.uid]' />
          <map key='[unit]' value='[saopaulo.osm.json].[address.unit]' />
          <map key='[user]' value='[saopaulo.osm.json].[created.user]' />
          <map key='[version]' value='[saopaulo.osm.json].[created.version]' />
          <map key='[website]' value='[saopaulo.osm.json].[contact.website]' />
          <map key='[whatsapp]' value='[saopaulo.osm.json].[contact.whatsapp]' />
          <map key='[youtube]' value='[saopaulo.osm.json].[contact.youtube]' />
          <map key='[Índice do documento (gerado)]' value='[saopaulo.osm.json].[Índice do documento (gerado)]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Índice do documento (gerado)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Índice do documento (gerado)]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>Índice do documento (gerado)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Business]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>Business</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>Name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.floor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[floor]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.floor</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.housename</remote-name>
            <remote-type>130</remote-type>
            <local-name>[housename]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.housename</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.housenumber</remote-name>
            <remote-type>130</remote-type>
            <local-name>[housenumber]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.housenumber</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.postcode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postcode]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.postcode</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.street</remote-name>
            <remote-type>130</remote-type>
            <local-name>[street]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.street</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.suburb</remote-name>
            <remote-type>130</remote-type>
            <local-name>[suburb]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.suburb</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>address.unit</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.email</remote-name>
            <remote-type>130</remote-type>
            <local-name>[email]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.email</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.facebook</remote-name>
            <remote-type>130</remote-type>
            <local-name>[facebook]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.facebook</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.fax</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fax]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.fax</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.google_plus</remote-name>
            <remote-type>130</remote-type>
            <local-name>[google_plus]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.google_plus</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.instagram</remote-name>
            <remote-type>130</remote-type>
            <local-name>[instagram]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.instagram</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.linkedin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[linkedin]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.linkedin</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[phone]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.phone</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.soundcloud</remote-name>
            <remote-type>130</remote-type>
            <local-name>[soundcloud]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.soundcloud</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.twitter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[twitter]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.twitter</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.website</remote-name>
            <remote-type>130</remote-type>
            <local-name>[website]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.website</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.whatsapp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[whatsapp]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.whatsapp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contact.youtube</remote-name>
            <remote-type>130</remote-type>
            <local-name>[youtube]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>contact.youtube</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created.changeset</remote-name>
            <remote-type>130</remote-type>
            <local-name>[changeset]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>created.changeset</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created.timestamp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>created.timestamp</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created.uid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[uid]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>created.uid</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created.user</remote-name>
            <remote-type>130</remote-type>
            <local-name>[user]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>created.user</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created.version</remote-name>
            <remote-type>130</remote-type>
            <local-name>[version]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>created.version</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos.Índice (gerado)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pos Índice (gerado)]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>pos.Índice (gerado)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos.Valor</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pos]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>pos.Valor</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[saopaulo.osm.json]</parent-name>
            <remote-alias>type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Business]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Business</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Name</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Número de registros por pos]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Índice do documento (gerado)] : COUNTD([pos Índice (gerado)]) }' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em pos nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Número de registros por saopaulo.osm.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Índice do documento (gerado)])' />
        <desc>
          <formatted-text>
            <run>Uma medida calculada que está em saopaulo.osm.json nível de detalhe</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Changeset' datatype='string' name='[changeset]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>created.changeset</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Email' datatype='string' name='[email]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.email</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Facebook' datatype='string' name='[facebook]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.facebook</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Fax' datatype='string' name='[fax]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.fax</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Floor' datatype='string' name='[floor]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.floor</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Google Plus' datatype='string' name='[google_plus]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.google_plus</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Housename' datatype='string' name='[housename]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.housename</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Housenumber' datatype='string' name='[housenumber]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.housenumber</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Instagram' datatype='string' name='[instagram]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.instagram</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Linkedin' datatype='string' name='[linkedin]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.linkedin</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Phone' datatype='string' name='[phone]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.phone</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Pos Índice (Gerado)' datatype='integer' name='[pos Índice (gerado)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>pos.Índice (gerado)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pos' datatype='real' name='[pos]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>pos.Valor</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Postcode' datatype='string' name='[postcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.postcode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Soundcloud' datatype='string' name='[soundcloud]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.soundcloud</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.state</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Street' datatype='string' name='[street]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.street</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Suburb' datatype='string' name='[suburb]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.suburb</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='string' name='[timestamp]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>created.timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Twitter' datatype='string' name='[twitter]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.twitter</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>type</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Uid' datatype='string' name='[uid]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>created.uid</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Unit' datatype='string' name='[unit]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.unit</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='User' datatype='string' name='[user]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>created.user</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Version' datatype='string' name='[version]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>created.version</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Website' datatype='string' name='[website]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.website</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Whatsapp' datatype='string' name='[whatsapp]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.whatsapp</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Youtube' datatype='string' name='[youtube]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>contact.youtube</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Índice Do Documento (Gerado)' datatype='integer' name='[Índice do documento (gerado)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Índice do documento (gerado)</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Address' role='dimensions'>
        <folder-item name='[city]' type='field' />
        <folder-item name='[country]' type='field' />
        <folder-item name='[floor]' type='field' />
        <folder-item name='[housename]' type='field' />
        <folder-item name='[housenumber]' type='field' />
        <folder-item name='[postcode]' type='field' />
        <folder-item name='[state]' type='field' />
        <folder-item name='[street]' type='field' />
        <folder-item name='[suburb]' type='field' />
        <folder-item name='[unit]' type='field' />
      </folder>
      <folder name='Contact' role='dimensions'>
        <folder-item name='[email]' type='field' />
        <folder-item name='[facebook]' type='field' />
        <folder-item name='[fax]' type='field' />
        <folder-item name='[google_plus]' type='field' />
        <folder-item name='[instagram]' type='field' />
        <folder-item name='[linkedin]' type='field' />
        <folder-item name='[phone]' type='field' />
        <folder-item name='[soundcloud]' type='field' />
        <folder-item name='[twitter]' type='field' />
        <folder-item name='[website]' type='field' />
        <folder-item name='[whatsapp]' type='field' />
        <folder-item name='[youtube]' type='field' />
      </folder>
      <folder name='Created' role='dimensions'>
        <folder-item name='[changeset]' type='field' />
        <folder-item name='[timestamp]' type='field' />
        <folder-item name='[uid]' type='field' />
        <folder-item name='[user]' type='field' />
        <folder-item name='[version]' type='field' />
      </folder>
      <folder name='Saopaulo.Osm' role='dimensions'>
        <folder-item name='[Business]' type='field' />
        <folder-item name='[Name]' type='field' />
        <folder-item name='[id]' type='field' />
        <folder-item name='[pos Índice (gerado)]' type='field' />
        <folder-item name='[type]' type='field' />
        <folder-item name='[Índice do documento (gerado)]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Estados Unidos&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Planilha 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='saopaulo.osm' name='federated.1sfm0np0hk2l83190rrx90ttxwfj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sfm0np0hk2l83190rrx90ttxwfj'>
            <column datatype='string' name='[Business]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Business</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='string' name='[Name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Business]' derivation='None' name='[none:Business:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[street]' derivation='None' name='[none:street:nk]' pivot='key' type='nominal' />
            <column caption='Pos' datatype='real' name='[pos]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>pos.Valor</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Street' datatype='string' name='[street]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>address.street</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[pos]' derivation='Sum' name='[sum:pos:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Business:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Business:nk]' member='&quot;cafe&quot;' />
              <groupfilter function='member' level='[none:Business:nk]' member='&quot;casino&quot;' />
              <groupfilter function='member' level='[none:Business:nk]' member='&quot;cinema&quot;' />
              <groupfilter function='member' level='[none:Business:nk]' member='&quot;fast_food&quot;' />
              <groupfilter function='member' level='[none:Business:nk]' member='&quot;ice_cream&quot;' />
              <groupfilter function='member' level='[none:Business:nk]' member='&quot;internet_cafe&quot;' />
              <groupfilter function='member' level='[none:Business:nk]' member='&quot;restaurant&quot;' />
              <groupfilter function='member' level='[none:Business:nk]' member='&quot;restaurant;cafe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Name:nk]'>
            <groupfilter function='level-members' level='[none:Name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Business:nk]</column>
            <column>[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1sfm0np0hk2l83190rrx90ttxwfj].[sum:pos:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1sfm0np0hk2l83190rrx90ttxwfj].[sum:pos:qk]' />
              <text column='[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Business:nk]' />
              <text column='[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:street:nk]' />
              <text column='[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Name:nk]' />
              <color column='[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Business:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Planilha 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card pane-specification-id='0' param='[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Business:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Business:nk]</field>
            <field>[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:Name:nk]</field>
            <field>[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:city:nk]</field>
            <field>[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:street:nk]</field>
            <field>[federated.1sfm0np0hk2l83190rrx90ttxwfj].[none:suburb:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Planilha 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
